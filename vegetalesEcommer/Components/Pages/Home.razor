@page "/"
@using Proyecto_Final1.Data
@using Proyecto_Final1.Productos
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Mercado Organico</PageTitle>

<section class="hero-section flex items-center justify-center text-white">
    <div class="text-center px-4">
        <h1 class="text-4xl md:text-5xl font-bold mb-4">Verduras Frescas & Orgánicas</h1>
        <p class="text-xl mb-6">Directo del campo a tu mesa</p>
        <a href="/productos" class="bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-md inline-block transition">Ver productos</a>
    </div>
</section>

<main class="container mx-auto px-4 py-12">
    <section id="products" class="mb-16">
        <h2 class="text-3xl font-bold text-gray-800 mb-8 text-center">Nuestros Productos Destacados</h2>

        @if (featuredProducts == null)
        {
            <p class="text-center text-gray-600">Cargando productos...</p>
        }
        else if (!featuredProducts.Any())
        {
            <p class="text-center text-gray-600">No hay productos destacados disponibles en este momento.</p>
        }
        else
        {
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
                @foreach (var product in featuredProducts)
                {
                    <div class="veg-card bg-white rounded-lg overflow-hidden shadow-md">
                        <div class="h-48 overflow-hidden">
                            <img src="@product.ImagenUrl" alt="@product.Nombre" class="w-full h-full object-cover" onerror="this.onerror=null;this.src='https://placehold.co/400x300/e0e0e0/555555?text=Imagen+no+disponible';" />
                        </div>
                        <div class="p-4">
                            <h3 class="text-xl font-semibold text-gray-800 mb-2">@product.Nombre</h3>
                            <p class="text-gray-600 mb-3">@product.Descripcion</p>
                            <div class="flex justify-between items-center">
                                <span class="text-lg font-bold text-green-700">@product.Precio.ToString("C")/@product.UnidadDeMedida</span>
                                @* El botón "Añadir" aquí es solo visual. La lógica de carrito está en el componente /Productos *@
                                <button onclick="window.location.href='/productos'" class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded-md transition">Ver detalles</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </section>

    <section id="about" class="mb-16 bg-green-50 p-8 rounded-lg">
        <h2 class="text-3xl font-bold text-gray-800 mb-6 text-center">Nuestra Filosofía</h2>
        <div class="grid md:grid-cols-2 gap-8 items-center">
            <div>
                <p class="text-gray-700 mb-4">En Mercado Orgánico creemos en la agricultura sostenible y en llevar los productos más frescos directamente desde nuestros campos a tu hogar.</p>
                <p class="text-gray-700 mb-4">Trabajamos con pequeños agricultores locales que comparten nuestra pasión por la calidad y el respeto al medio ambiente.</p>
                <p class="text-gray-700">Cada producto es seleccionado cuidadosamente para garantizar la máxima frescura y sabor.</p>
            </div>
            <div class="rounded-lg overflow-hidden shadow-md">
                <img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/b90c8610-c801-4074-a61b-93a47d7e84d9.png" alt="Granja orgánica con cultivos de vegetales bajo el sol con montañas al fondo" class="w-full" />
            </div>
        </div>
    </section>
</main>

@code {
    private List<Producto> featuredProducts;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Cargar una pequeña cantidad de productos destacados (ej. los primeros 4)
            featuredProducts = await DbContext.Productos.Take(4).ToListAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar productos destacados: {ex.Message}");
            // Considerar mostrar un mensaje de error al usuario o loguear el error de forma más robusta
        }
    }
}
