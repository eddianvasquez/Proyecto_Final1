@page "/nosotros"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Proyecto_Final1.Data
@using Proyecto_Final1.Models.Usuarios

@inject ApplicationDbContext DbContext
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Nosotros</PageTitle>

<main class="container mx-auto px-4 py-12">
	<section class="mb-16">
		<h1 class="text-4xl md:text-5xl font-bold text-gray-800 mb-6 text-center">Nuestra Historia</h1>
		<div class="grid md:grid-cols-2 gap-12 items-center">
			<div class="space-y-6 text-gray-700 text-lg">
				<p>Todo empezó con una simple idea: llevar la frescura y el sabor de la tierra directamente a tu hogar. Cansados de las verduras insípidas y los largos procesos de distribución que hacen que los alimentos pierdan su vitalidad, decidimos crear algo diferente. Queríamos un lugar donde la calidad, la sostenibilidad y la conexión con la comunidad fueran los ingredientes principales.</p>
				<p>Así nació nuestra página. No somos solo un sitio web; somos un puente entre tú y los pequeños agricultores locales que, con dedicación y respeto por el medio ambiente, cultivan las mejores verduras orgánicas. Trabajamos mano a mano con ellos para asegurar que cada producto que llega a tu mesa es cultivado de forma sostenible, sin pesticidas dañinos, y cosechado en el momento justo para que conserve todos sus nutrientes y su delicioso sabor.</p>
				<p>Nuestra misión es simple: ofrecerte alimentos que no solo nutran tu cuerpo, sino que también cuenten una historia de esfuerzo, pasión y compromiso con un futuro más verde. Gracias por ser parte de esta historia. Tu apoyo nos permite seguir creciendo y ayudando a la agricultura local.</p>
			</div>
			<div class="rounded-lg overflow-hidden shadow-xl">
				<img src="https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/b90c8610-c801-4074-a61b-93a47d7e84d9.png" alt="Granja orgánica con cultivos de vegetales bajo el sol con montañas al fondo" class="w-full object-cover h-96" />
			</div>
		</div>
	</section>

	<hr class="my-12">

	<section id="faq" class="mb-16 bg-gray-50 p-8 rounded-lg shadow-inner">
		<h2 class="text-3xl font-bold text-gray-800 mb-6 text-center">¿Tienes alguna pregunta?</h2>
		<p class="text-center text-gray-600 mb-8">Estamos aquí para ayudarte. Si tienes alguna duda sobre nuestros productos, nuestra historia, o cómo trabajamos, no dudes en preguntar.</p>

		@if (showSuccessMessage)
		{
			<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative max-w-xl mx-auto mb-6" role="alert">
				<strong class="font-bold">¡Gracias!</strong>
				<span class="block sm:inline">Tu pregunta ha sido enviada perfectamente y nos pondremos en contacto contigo pronto.</span>
				<span class="absolute top-0 bottom-0 right-0 px-4 py-3">
					<button @onclick="ResetForm" class="text-green-700 hover:text-green-900 focus:outline-none">
						<i class="fas fa-times"></i>
					</button>
				</span>
			</div>
		}

		<EditForm Model="@contactForm" OnValidSubmit="@HandleValidSubmit" FormName="contactForm" class="max-w-xl mx-auto space-y-6">
			<DataAnnotationsValidator />

			<div>
				<label for="name" class="block text-sm font-medium text-gray-700">Tu Nombre</label>
				<InputText @bind-Value="contactForm.Name"
						     id="name"
						     class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500"
						     placeholder="Ej: Juan Pérez" />
				<ValidationMessage For="@(() => contactForm.Name)" class="text-red-600 text-sm" />
			</div>
			<div>
				<label for="email" class="block text-sm font-medium text-gray-700">Tu Correo Electrónico</label>
				<InputText type="email"
						     @bind-Value="contactForm.Email"
						     id="email"
						     class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500"
						     placeholder="Ej: juan.perez@email.com" />
				<ValidationMessage For="@(() => contactForm.Email)" class="text-red-600 text-sm" />
			</div>
			<div>
				<label for="question" class="block text-sm font-medium text-gray-700">Tu Pregunta</label>
				<InputTextArea @bind-Value="contactForm.Question"
							   id="question"
							   rows="4"
							   class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500"
							   placeholder="Escribe aquí tu duda..." />
				<ValidationMessage For="@(() => contactForm.Question)" class="text-red-600 text-sm" />
			</div>
			<div class="text-center">
				<button type="submit" class="w-full md:w-auto bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-8 rounded-md transition">Enviar Pregunta</button>
			</div>
		</EditForm>
	</section>
</main>

@code {
	[CascadingParameter]
	private Task<AuthenticationState>? authenticationStateTask { get; set; }

	private ContactFormModel contactForm = new ContactFormModel();
	private bool showSuccessMessage = false;

	private async Task HandleValidSubmit()
	{
		var authState = await authenticationStateTask!;
		var user = authState.User;

		// Buscar el ID del usuario en los claims
		var userId = user.Claims.FirstOrDefault(c => c.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier")?.Value;

		if (userId != null)
		{
			try
			{
				var newQuestion = new Preguntas
				{
					UsuarioId = userId,
					Name = contactForm.Name,
					Email = contactForm.Email,
					Question = contactForm.Question,
					FechaEnvio = DateTime.Now
				};

				DbContext.Preguntas.Add(newQuestion);

				await DbContext.SaveChangesAsync();

				showSuccessMessage = true;
				contactForm = new ContactFormModel();
			}
			catch (Exception ex)
			{
				Console.WriteLine($"Error al guardar la pregunta: {ex.Message}");
			}
		}
		else
		{
			Console.WriteLine("ID de usuario no encontrado. No se puede guardar la pregunta.");

		}
	}

	private void ResetForm()
	{
		contactForm = new ContactFormModel();
		showSuccessMessage = false;
	}

	private class ContactFormModel
	{
		[Required(ErrorMessage = "El nombre es obligatorio.")]
		[StringLength(100, ErrorMessage = "El nombre no puede exceder 100 caracteres.")]
		public string Name { get; set; } = "";

		[Required(ErrorMessage = "El correo electrónico es obligatorio.")]
		[EmailAddress(ErrorMessage = "Formato de correo electrónico inválido.")]
		[StringLength(150, ErrorMessage = "El correo electrónico no puede exceder 150 caracteres.")]
		public string Email { get; set; } = "";

		[Required(ErrorMessage = "La pregunta es obligatoria.")]
		[StringLength(1000, ErrorMessage = "La pregunta no puede exceder 1000 caracteres.")]
		public string Question { get; set; } = "";
	}
}
