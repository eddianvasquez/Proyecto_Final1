@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Proyecto_Final1.Components.Account
@using Proyecto_Final1.Data


@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Iniciar Sesión - Mercado Orgánico</PageTitle>

<div class="min-h-screen bg-gradient-to-br from-green-50 to-green-100 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">

        <div class="text-center">
            <div class="flex justify-center items-center space-x-2 mb-4">
                <i class="fas fa-leaf text-4xl text-green-600"></i>
                <span class="text-2xl font-bold text-green-700">Mercado Orgánico</span>
            </div>
            <h2 class="text-3xl font-extrabold text-gray-900">Iniciar Sesión</h2>
            <p class="mt-2 text-sm text-gray-600">
                Accede a tu cuenta para continuar
            </p>
        </div>


        <div class="bg-white rounded-lg shadow-lg p-8">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md text-sm mb-4" role="alert">
                    @errorMessage
                </div>
            }

            <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login" class="space-y-6">
                <DataAnnotationsValidator />


                <div class="space-y-2">
                    <label for="Input.Email" class="block text-sm font-medium text-gray-700">
                        <i class="fas fa-envelope text-green-600 mr-2"></i>Correo Electrónico
                    </label>
                    <InputText @bind-Value="Input.Email"
                               id="Input.Email"
                               class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 transition"
                               autocomplete="username"
                               aria-required="true"
                               placeholder="nombre@ejemplo.com" />
                    <ValidationMessage For="() => Input.Email" class="text-red-600 text-sm" />
                </div>


                <div class="space-y-2">
                    <label for="Input.Password" class="block text-sm font-medium text-gray-700">
                        <i class="fas fa-lock text-green-600 mr-2"></i>Contraseña
                    </label>
                    <InputText type="password"
                               @bind-Value="Input.Password"
                               id="Input.Password"
                               class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 transition"
                               autocomplete="current-password"
                               aria-required="true"
                               placeholder="••••••••" />
                    <ValidationMessage For="() => Input.Password" class="text-red-600 text-sm" />
                </div>


                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <InputCheckbox @bind-Value="Input.RememberMe"
                                       id="Input.RememberMe"
                                       class="h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300 rounded" />
                        <label for="Input.RememberMe" class="ml-2 block text-sm text-gray-700">
                            Recordarme
                        </label>
                    </div>
                    <div>
                        <a href="Account/ForgotPassword"
                           class="text-sm text-green-600 hover:text-green-500 hover:underline transition">
                            <i class="fas fa-question-circle mr-1"></i>¿Olvidaste tu contraseña?
                        </a>
                    </div>
                </div>


                <div>
                    <button type="submit"
                            class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition duration-150 ease-in-out transform hover:scale-105">
                        <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                            <i class="fas fa-sign-in-alt text-green-500 group-hover:text-green-400"></i>
                        </span>
                        Iniciar Sesión
                    </button>
                </div>


                <div class="text-center space-y-2">
                    <div>
                        <a href="/Account/Register"
                           class="text-sm text-green-600 hover:text-green-500 hover:underline transition">
                            <i class="fas fa-user-plus mr-1"></i>¿No tienes una cuenta? Regístrate aquí
                        </a>
                    </div>
                    <div>
                        <a href="Account/ResendEmailConfirmation"
                           class="text-sm text-green-600 hover:text-green-500 hover:underline transition">
                            <i class="fas fa-envelope mr-1"></i>Reenviar confirmación de correo
                        </a>
                    </div>
                </div>
            </EditForm>
        </div>


        <div class="text-center">
            <a href="/"
               class="inline-flex items-center text-sm text-gray-600 hover:text-green-600 transition">
                <i class="fas fa-arrow-left mr-2"></i>
                Volver al inicio
            </a>
        </div>
    </div>
</div>

@code {
    private string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");

            RedirectManager.RedirectTo("/Perfil");
        }
        else if (result.RequiresTwoFactor)
        {
            RedirectManager.RedirectTo(
            "Account/LoginWith2fa",
            new() { ["returnUrl"] = ReturnUrl, ["rememberMe"] = Input.RememberMe });
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("User account locked out.");
            RedirectManager.RedirectTo("Account/Lockout");
        }
        else
        {
            errorMessage = "Error: Correo o contraseña incorrectos.";
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "El correo electrónico es obligatorio.")]
        [EmailAddress(ErrorMessage = "Formato de correo electrónico inválido.")]
        public string Email { get; set; } = "";
        [Required(ErrorMessage = "La contraseña es obligatoria.")]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";
        [Display(Name = "¿Recordarme?")]
        public bool RememberMe { get; set; }
    }
}
